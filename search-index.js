var searchIndex = JSON.parse('{\
"quill":{"doc":"Inside the compiler, types may have certain suffixes to …","t":[12,3,13,3,4,4,3,13,13,3,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,0,11,11,12,12,11,11,11,5,5,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,5,5,5,5,5,12,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,12,12,12,4,13,13,4,13,13,13,13,13,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,11,11,11,11,11,11,5,11,11,7,13,4,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,12,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["0","BuildConfig","Cargo","CliConfig","CompilerLocation","HostType","HumanSmallDuration","Installed","Linux","ProjectConfig","SPINNER_TEMPLATE","Windows","__private_field","as_executable","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_folder","cli","clone","clone_into","code_folder","compiler_location","component_prefix","deref","eq","error","exit","fmt","from","from","from","from","from","from","from","gen_cli_config","gen_project_config","generate_build_config","generate_build_info","initialize","into","into","into","into","into","into","into","invoke_quillc","main","parse_build_target","process_build","process_clean","process_run","project_info","run","timed","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","verbose","zig_compiler","host","root","source","BuildTarget","Debug","Linux","OptimisationType","ReleaseFast","ReleaseSafe","ReleaseSmall","Wasm32","Win","borrow","borrow","borrow_mut","borrow_mut","build","build_flags","clean","eq","eq","fmt","fmt","fmt","fmt","from","from","from_str","from_str","gen_cli","into","into","run","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update","variants","variants","APP_USER_AGENT","Nightly","QuillVersion","ZigDownloadInfo","ZigRelease","ZigReleaseDownloadInfo","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deserialize","deserialize","deserialize","download_archive_or_exit","download_artifact","download_self","download_text_or_exit","eq","fmt","from","from","from","from","into","into","into","into","master","ne","process_update","tarball","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","x86_64_linux","x86_64_windows"],"q":["quill","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","quill::CompilerLocation","","","quill::cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","quill::update","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","CLI flags for the <code>build</code> or <code>run</code> command.","Runs the <code>quillc</code> whose source is in the given folder, by …","","Where is the Quill compiler stored? By default, <code>quillc</code> …","","Like indicatif::HumanDuration, but can also format small …","The root dir contains <code>compiler-deps</code> and a folder for each …","","","","","","Make the file have the right extension to be an …","","","","","","","","","","","","","","","","","","","","","","Returns the component name prefix assigned to this host. …","","","","","","","","","","","","","","","Generates the build config that <code>quill</code> needs, that we do <em>…","Generates the build config that <code>quillc</code> needs, but that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Where is the Zig compiler associated with this Quill …","","","","","","","","","","","","","","","","","","Adds all flags that are relevant to building a quill …","","","","","","","","","","","","All switches from <code>build</code> are copied into <code>run</code>.","","","","","","","","","","","","","","","","A nightly <code>quill</code> installation is uniquely characterised by …","","","","","","","","","","","","","","","","","","If a version is provided, this function assumes that the …","If unpack_inner_folder is true, the artifact contains …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,2,0,0,0,0,2,3,0,0,3,4,3,5,6,2,1,7,3,4,5,6,2,1,7,3,4,0,7,0,3,3,7,5,3,4,3,0,0,1,5,6,2,1,7,3,4,0,0,0,0,4,5,6,2,1,7,3,4,2,0,0,0,0,0,7,0,6,3,1,5,6,2,1,7,3,4,5,6,2,1,7,3,4,5,6,2,1,7,3,4,0,5,2,8,8,9,0,10,11,0,10,10,10,11,11,11,10,11,10,0,0,0,11,10,11,11,10,10,11,10,11,10,0,11,10,0,11,10,11,10,11,10,11,10,0,11,10,0,12,0,0,0,0,12,13,14,15,12,13,14,15,12,12,13,14,15,0,0,0,0,12,12,12,13,14,15,12,13,14,15,13,12,0,15,12,12,12,12,13,14,15,12,13,14,15,12,13,14,15,14,14],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[["asref",8,["path"]],["path",3]],["pathbuf",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["projectconfig",3],["buildconfig",3],["cliconfig",3],["buildinfo",3]]],null,null,[[],["hosttype",4]],[[]],null,null,[[],["str",15]],[[],["string",3]],[[["hosttype",4]],["bool",15]],[[["display",8]]],[[["errormessage",3],["erroremitter",3]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["argmatches",3]],["cliconfig",3]],[[["argmatches",3]],["projectconfig",3]],[[["argmatches",3]],["buildconfig",3]],[[["projectconfig",3],["targettriple",3],["argmatches",3]],["buildinfo",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["projectconfig",3],["buildconfig",3],["cliconfig",3],["quillcinvocation",3]]],[[]],[[["buildtarget",4]],["targettriple",3]],[[["projectconfig",3],["cliconfig",3],["argmatches",3]]],[[["projectconfig",3],["cliconfig",3],["argmatches",3]]],[[["projectconfig",3],["cliconfig",3],["argmatches",3]]],null,[[["projectconfig",3],["buildconfig",3],["cliconfig",3],["buildinfo",3]]],null,[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[],["pathbuf",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["app",3]],[[["app",3]],["app",3]],[[],["app",3]],[[["buildtarget",4]],["bool",15]],[[["optimisationtype",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["app",3]],[[]],[[]],[[],["app",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["app",3]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["quillversion",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["option",4,["quillversion"]],["pathbuf",3],["str",15],["quillversion",4]]],[[["option",4,["quillversion"]],["pathbuf",3],["bool",15],["str",15],["quillversion",4]]],[[["pathbuf",3],["hosttype",4],["quillversion",4]]],[[["str",15]],["string",3]],[[["quillversion",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["quillversion",4]],["bool",15]],[[["cliconfig",3],["argmatches",3]]],null,[[]],[[],["string",3]],[[],["result",4]],[[["string",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null],"p":[[3,"HumanSmallDuration"],[4,"CompilerLocation"],[4,"HostType"],[3,"SPINNER_TEMPLATE"],[3,"CliConfig"],[3,"BuildConfig"],[3,"ProjectConfig"],[13,"Installed"],[13,"Cargo"],[4,"OptimisationType"],[4,"BuildTarget"],[4,"QuillVersion"],[3,"ZigDownloadInfo"],[3,"ZigReleaseDownloadInfo"],[3,"ZigRelease"]]},\
"quill_borrow_check":{"doc":"","t":[5],"n":["borrow_check"],"q":["quill_borrow_check"],"d":["Checks to make sure that borrows of data do not outlive …"],"i":[0],"f":[[[["sourcefilemir",3],["sourcefileidentifier",3]],[["sourcefilemir",3],["diagnosticresult",3,["sourcefilemir"]]]]],"p":[]},\
"quill_common":{"doc":"","t":[0,0,0,3,3,13,3,13,3,4,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,13,3,8,3,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,10,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11],"n":["diagnostic","location","name","Diagnostic","DiagnosticResult","Error","ErrorMessage","Help","HelpMessage","HelpType","Note","Severity","Warning","at","at_location","bind","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deny","deserialize","deserialize","deserialize","deserialize","deserialize","destructure","diagnostic","diagnostic","eq","eq","fail","fail_many","failed","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_iter","help","help_type","in_file","into","into","into","into","into","into","map","message","message","new","new_with","new_with_many","ok","ok_with","ok_with_many","range","sequence","sequence_unfail","serialize","serialize","serialize","serialize","serialize","severity","source_file","succeeded","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unfail","value","with","0","Location","ModuleIdentifier","Quill","Range","Ranged","SourceFileIdentifier","SourceFileIdentifierSegment","SourceFileType","Toml","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","col","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","end","eq","eq","eq","eq","eq","eq","file","file_extension","file_type","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","into","into","into","into","into","into","line","module","ne","ne","ne","ne","ne","new","partial_cmp","partial_cmp","range","range","segments","serialize","serialize","serialize","serialize","serialize","serialize","start","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","QualifiedName","borrow","borrow_mut","clone","clone_into","eq","fmt","fmt","from","hash","into","name","range","source_file","test_name","to_owned","to_string","try_from","try_into","type_id"],"q":["quill_common","","","quill_common::diagnostic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","quill_common::location","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","quill_common::name","","","","","","","","","","","","","","","","","","",""],"d":["","","","","Even if warnings or errors are emitted, we may still be …","","Represents an error/warning/lint message displayed to the …","","TODO: consider …","","","…","","","","A monadic bind operation that consumes this diagnostic …","","","","","","","","","","","","","","","","","Converts a successful diagnostic that had one or more …","","","","","","Splits up this diagnostic result into its value and its …","","","","","The computation failed. An error message is mandatory if …","","Returns true if the computation failed.","","","","","","","","","","","","","","","","","Any failed diagnostics will be excluded from the output, …","","","","","","","","","","Apply an infallible operation to the value inside this …","","","","","","The computation succeeded with no messages. This is the …","The computation succeeded, but there was some error or …","","If the location is not specified, then the diagnostic …","Combines a list of diagnostic results into a single …","Combines a list of diagnostic results into a single …","","","","","","","","Returns true if the computation succeeded.","","","","","","","","","","","","","","","","","","","","","Converts a failed diagnostic into a successful diagnostic …","Retrieves the value for inspection.","Appends a message to this diagnostic result, regardless …","","","","","","","","A fragment of the canonical name for a source file. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A 0-indexed column number.","","","","","","","The end of this range of characters, exclusive.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A 0-indexed line number.","","","","","","","","","","","","","","","","","","","The start of this range of characters, inclusive.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A fully qualified name referring to a top-level item …","","","","","","","","","","","The local name within the module.","The range that the name was defined at, not the range the …","The source file path that the name was defined at, not …","A utility function for tests, to create new names quickly.","","","","",""],"i":[0,0,0,0,0,1,0,2,0,0,2,0,1,3,3,4,3,1,2,5,6,4,3,1,2,5,6,4,1,2,1,2,4,3,1,2,5,6,4,5,6,1,2,4,4,4,3,1,2,5,6,4,3,1,2,5,6,4,4,4,4,4,4,5,6,3,3,1,2,5,6,4,4,5,6,5,5,5,4,4,4,3,4,4,3,1,2,5,6,5,3,4,1,2,3,1,2,5,6,4,3,1,2,5,6,4,3,1,2,5,6,4,4,4,4,7,0,0,8,0,0,0,0,0,8,9,10,7,11,12,8,9,10,7,11,12,8,9,10,7,11,12,8,9,10,7,11,12,8,9,10,9,9,10,7,11,12,8,10,9,10,7,11,12,8,12,8,12,9,9,10,10,7,7,11,11,12,12,8,8,9,10,10,7,7,11,11,12,8,7,11,12,8,9,10,7,11,12,8,9,12,9,10,7,11,12,9,9,10,13,10,11,9,10,7,11,12,8,10,9,10,7,11,12,8,9,10,7,11,12,8,9,10,7,11,12,8,9,10,7,11,12,8,9,10,7,11,12,8,10,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[["sourcefileidentifier",3]]],[[["sourcefileidentifier",3],["location",3]]],[[],["diagnosticresult",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["severity",4]],[[],["helptype",4]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],null,null,[[["severity",4]],["bool",15]],[[["helptype",4]],["bool",15]],[[["errormessage",3]]],[[["vec",3,["errormessage"]],["errormessage",3]]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["result",4,["errormessage"]],["errormessage",3]]],[[["result",4,["vec"]],["vec",3,["errormessage"]]]],[[]],[[]],[[]],[[["intoiterator",8]]],null,null,[[["sourcefileidentifier",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["diagnosticresult",3]],null,null,[[["diagnostic",3],["string",3],["severity",4]]],[[["severity",4],["string",3],["helpmessage",3],["diagnostic",3]]],[[["severity",4],["helpmessage",3],["string",3],["vec",3,["helpmessage"]],["diagnostic",3]]],[[]],[[["errormessage",3]]],[[["vec",3,["errormessage"]],["errormessage",3]]],null,[[],[["diagnosticresult",3,["vec"]],["vec",3]]],[[],[["diagnosticresult",3,["vec"]],["vec",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],["bool",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["diagnosticresult",3,["option"]],["option",4]]],[[],["option",4]],[[["errormessage",3]]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["location",3]],[[],["range",3]],[[],["sourcefileidentifiersegment",3]],[[],["moduleidentifier",3]],[[],["sourcefileidentifier",3]],[[],["sourcefiletype",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["location",3]],["ordering",4]],[[["range",3]],["ordering",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["location",3]],["bool",15]],[[["range",3]],["bool",15]],[[["sourcefileidentifiersegment",3]],["bool",15]],[[["moduleidentifier",3]],["bool",15]],[[["sourcefileidentifier",3]],["bool",15]],[[["sourcefiletype",4]],["bool",15]],null,[[],["str",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["location",3]]],[[]],[[]],[[]],[[["vec",3,["string"]],["string",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["location",3]],["bool",15]],[[["range",3]],["bool",15]],[[["sourcefileidentifiersegment",3]],["bool",15]],[[["moduleidentifier",3]],["bool",15]],[[["sourcefileidentifier",3]],["bool",15]],[[["u32",15]]],[[["location",3]],[["ordering",4],["option",4,["ordering"]]]],[[["range",3]],[["ordering",4],["option",4,["ordering"]]]],[[],["range",3]],[[],["range",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["range",3]],["range",3]],null,[[]],[[]],[[],["qualifiedname",3]],[[]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,null,null,[[["str",15]],["qualifiedname",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[4,"Severity"],[4,"HelpType"],[3,"Diagnostic"],[3,"DiagnosticResult"],[3,"ErrorMessage"],[3,"HelpMessage"],[3,"SourceFileIdentifierSegment"],[4,"SourceFileType"],[3,"Location"],[3,"Range"],[3,"ModuleIdentifier"],[3,"SourceFileIdentifier"],[8,"Ranged"],[3,"QualifiedName"]]},\
"quill_func_objects":{"doc":"","t":[5],"n":["convert_func_objects"],"q":["quill_func_objects"],"d":["Converts curried functions and partial application of …"],"i":[0],"f":[[[["projectmir",3]]]],"p":[]},\
"quill_index":{"doc":"","t":[3,13,3,3,13,3,3,3,6,3,3,4,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["AspectI","Data","DataI","DefinitionI","Enum","EnumI","EnumVariant","FileIndex","ProjectIndex","TypeConstructorI","TypeDeclarationI","TypeDeclarationTypeI","TypeParameter","UsedFile","aspects","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compute_used_files","decl_type","definitions","definitions","enum_variant_types","fields","file","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","index","index_project","index_single_file","into","into","into","into","into","into","into","into","into","into","into","name","name","name","name","name","parameters","range","range","symbol_type","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_ctor","type_ctor","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_params","type_params","type_variables","type_variables","types","variants"],"q":["quill_index","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An aspect.","","A <code>data</code> declaration.","A top-level definition, i.e. a <code>def</code> block. TODO: In the …","","A <code>enum</code> declaration.","","An index of all top-level items in a file.","","","A type declaration, e.g. <code>data Bool = True | False</code>.","Either a data declaration, a new type wrapper, a type …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Produces a list of all the files (including itself) that …","","","","Maps enum variant names (True, Left) to the enum that …","","","","","","","","","","","","","","","","","","","","","","","","Computes the index for a file.","","","","","","","","","","","","","","This is kept here mostly because it contains the <code>Range</code> …","","","","","A type variable may have one or more unnamed parameters, …","Where was this data declaration written?","Where was this enum declaration written?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,0,0,1,0,0,0,0,0,0,0,0,0,2,3,2,4,1,5,6,7,8,9,10,11,3,2,4,1,5,6,7,8,9,10,11,10,10,0,4,2,11,2,8,3,2,4,1,5,6,7,8,9,10,11,3,2,4,1,5,6,7,8,9,10,11,0,0,0,3,2,4,1,5,6,7,8,9,10,11,4,7,9,10,11,10,5,6,9,10,3,2,4,1,5,6,7,8,9,10,11,3,2,4,1,5,6,7,8,9,10,11,5,7,3,2,4,1,5,6,7,8,9,10,11,5,6,9,11,2,6],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["typeparameter",3]],[[]],[[["filep",3],["sourcefileidentifier",3]],[["diagnosticresult",3,["vec"]],["vec",3,["usedfile"]]]],null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["filep",3],["hashmap",3],["sourcefileidentifier",3]],[["diagnosticresult",3,["fileindex"]],["fileindex",3]]],[[["hashmap",3]],[["projectindex",6],["diagnosticresult",3,["projectindex"]]]],[[["filep",3],["sourcefileidentifier",3]],[["diagnosticresult",3,["fileindex"]],["fileindex",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null],"p":[[4,"TypeDeclarationTypeI"],[3,"FileIndex"],[3,"UsedFile"],[3,"TypeDeclarationI"],[3,"DataI"],[3,"EnumI"],[3,"EnumVariant"],[3,"TypeConstructorI"],[3,"DefinitionI"],[3,"TypeParameter"],[3,"AspectI"]]},\
"quill_install":{"doc":"","t":[7,5,5,5],"n":["APP_USER_AGENT","download_tar_gz_or_exit","error","main"],"q":["quill_install","","",""],"d":["","","",""],"i":[0,0,0,0],"f":[null,[[["str",15],["pathbuf",3]]],[[["display",8]]],[[]]],"p":[]},\
"quill_lexer":{"doc":"Converts each line of an input into a list of tokens.","t":[13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,4,4,3,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["Arrow","Aspect","Assign","Borrow","Brace","BracketType","CompilerIntrinsic","Copy","Data","Def","Dot","EndOfLine","Enum","Impl","Lambda","LeftBrace","LeftParenthesis","LeftSquare","Let","Lifetime","Name","Parentheses","Pub","RightBrace","RightParenthesis","RightSquare","Scope","Square","Token","Token","TokenTree","TokenType","Tree","Tree","Type","TypeOr","Underscore","Use","Variant","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bracket_type","close","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","lex","ne","open","range","range","range","range","token_type","tokens","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","explicit"],"q":["quill_lexer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","quill_lexer::TokenType"],"d":["<code>-></code>","","<code>=</code>","&","","","","TODO convert the <code>copy</code> keyword into a function in a <code>Copy</code> …","","","<code>.</code>","‘,’ or ‘\\\\n’ after certain characters","","","’\'","","","","","","","","","","","","<code>::</code>","","A single token such as an identifier or special character.","","A program (and by extension a line of code) is subdivided …","","A list of tokens grouped by a set of matching brackets.","","<code>:</code>","<code>|</code>","<code>_</code>","","","","","","","","","","","","","What kind of brackets does this token tree represent?","The range representing the close bracket.","","","","","","","","","","","","","","","","","","Lexes a source file. This function reads a source file …","","The range representing the open bracket.","","","","","","The actual tokens inside this tree node.","","","","","","","","","","","","","","","",""],"i":[1,1,1,1,2,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,2,0,3,0,0,0,3,1,1,1,1,1,1,4,5,3,2,1,4,5,3,2,5,5,1,2,1,4,5,3,2,1,4,5,3,2,1,4,5,3,2,0,1,5,4,5,3,4,4,5,1,4,5,3,2,1,4,5,3,2,1,4,5,3,2,6],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["tokentype",4]],["bool",15]],[[["brackettype",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["sourcefileidentifier",3],["packagefilesystem",3]],[["vec",3,["tokentree"]],["diagnosticresult",3,["vec"]]]],[[["tokentype",4]],["bool",15]],null,[[],["range",3]],[[],["range",3]],[[],["range",3]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null],"p":[[4,"TokenType"],[4,"BracketType"],[4,"TokenTree"],[3,"Token"],[3,"Tree"],[13,"EndOfLine"]]},\
"quill_link":{"doc":"","t":[5],"n":["link"],"q":["quill_link"],"d":[""],"i":[0],"f":[[[["str",15],["buildinfo",3],["path",3]]]],"p":[]},\
"quill_llvm":{"doc":"","t":[5],"n":["build"],"q":["quill_llvm"],"d":["Builds an LLVM module for the given input source file, …"],"i":[0],"f":[[[["str",15],["projectmir",3],["buildinfo",3]]]],"p":[]},\
"quill_lsp":{"doc":"","t":[0,0,5,0,0,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,5,5,5,3,3,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,12,12,12,12,11,5,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["backend","diagnostic","main","path","semantic_tokens","Backend","ProjectRoot","RootFileSystems","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client","default","did_change","did_close","did_open","did_save","dir","emit_project_diagnostics","emitted_diagnostics_to","file_systems","from","from","from","get_project_root","initialize","initialized","into","into","into","new","project_name","root_file_systems","semantic_tokens_full","shutdown","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","into_diagnostic","file_to_url","path_to_file","RawSemanticToken","SEMANTIC_TOKEN_LEGEND","SEMANTIC_TOKEN_LEGEND_VEC","SemanticExprConditions","SemanticTokenGenerator","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","col","create_semantic_tokens","default","deref","deref","finish","fmt","from","from","from","from","from","gen","gen_aspect","gen_def","gen_def_body","gen_def_decl","gen_expr","gen_type","gen_type_parameter","get_named_parameters","initialize","initialize","into","into","into","into","into","is_function","length","line","parameters","push_token","semantic_tokens_legend","to_owned","token_modifiers_bitset","token_type","tokens","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":["quill_lsp","","","","","quill_lsp::backend","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","quill_lsp::diagnostic","quill_lsp::path","","quill_lsp::semantic_tokens","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","Creates a PackageFileSystem for every Quill project we …","","","","","","","","","","","","","","","Maps project roots to the files in which diagnostics were …","Maps workspace roots to package file systems and the name …","","","","Check whether the given URI is inside a Quill project. …","","","","","","","","A new file system is created for every potential root.","","","","","","","","","","","","","","Takes a relativised path and converts it to a source file …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>is_main_pattern</code> is true if this contains the function …","","","","","","","","Is this expression a function or a function application?","","","A list of all the known named parameters.","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,2,3,1,2,3,1,3,1,1,1,1,2,1,1,3,1,2,3,1,1,1,1,2,3,1,2,1,1,1,1,2,3,1,2,3,1,2,3,0,0,0,0,0,0,0,0,4,5,6,7,8,4,5,6,7,8,4,5,8,8,7,0,8,4,5,6,7,6,7,8,4,5,6,6,6,6,6,6,6,6,0,4,5,6,7,8,4,5,8,7,7,8,6,0,8,7,7,6,6,7,8,4,5,6,7,8,4,5,6,7,8,4,5],"f":[null,null,[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["rootfilesystems",3]],[[["didchangetextdocumentparams",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["didclosetextdocumentparams",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["didopentextdocumentparams",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["didsavetextdocumentparams",3]],[["box",3,["future"]],["pin",3,["box"]]]],null,[[["pathbuf",3],["packagefilesystem",3]]],null,null,[[]],[[]],[[]],[[["url",3]]],[[["initializeparams",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["initializedparams",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[]],[[]],[[]],[[["client",3]]],null,null,[[["semantictokensparams",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[],[["box",3,["future"]],["pin",3,["box"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["hashmap",3],["errormessage",3]],["diagnostic",3]],[[["sourcefileidentifier",3],["hashmap",3]],["url",3]],[[["path",3],["string",3]],["sourcefileidentifier",3]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["semanticexprconditions",3]],[[]],null,[[["filep",3]],[["semantictoken",3],["vec",3,["semantictoken"]]]],[[],["semanticexprconditions",3]],[[],["vec",3]],[[],["hashmap",3]],[[],[["semantictoken",3],["vec",3,["semantictoken"]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["filep",3]]],[[["aspectp",3]]],[[["definitionp",3]]],[[["definitionbodyp",4]]],[[["definitiondeclp",3]]],[[["exprpatp",4],["semanticexprconditions",3]]],[[["typep",4]]],[[["typeparameterp",3]]],[[["bool",15],["exprpatp",4]],[["string",3],["vec",3,["string"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["u32",15],["range",3]]],[[],["semantictokenslegend",3]],[[]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"Backend"],[3,"ProjectRoot"],[3,"RootFileSystems"],[3,"SEMANTIC_TOKEN_LEGEND_VEC"],[3,"SEMANTIC_TOKEN_LEGEND"],[3,"SemanticTokenGenerator"],[3,"RawSemanticToken"],[3,"SemanticExprConditions"]]},\
"quill_mir":{"doc":"This module contains the mid-level intermediate …","t":[3,3,11,11,11,11,12,12,12,11,11,11,11,11,11,12,11,11,0,5,11,11,11,11,11,11,11,11,12,12,12,13,13,3,13,3,3,13,13,13,13,13,13,3,13,13,4,3,13,13,13,13,13,13,13,13,13,13,13,13,3,3,4,13,13,3,4,13,4,3,4,13,13,13,13,3,4,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["ProjectMIR","SourceFileMIR","borrow","borrow","borrow_mut","borrow_mut","definitions","entry_point","files","fmt","fmt","fmt","fmt","from","from","index","into","into","mir","to_mir","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","Apply","Argument","ArgumentIndex","Assign","BasicBlock","BasicBlockId","Borrow","CompilerIntrinsic","Constant","ConstructData","ConstructFunctionObject","ConstructImpl","ControlFlowGraph","Copy","DataField","DefinitionBodyM","DefinitionM","Drop","DropIfAlive","EnumDiscriminant","EnumField","Free","Goto","ImplField","InstanceSymbol","Invalid","InvokeFunction","InvokeFunctionObject","Local","LocalVariableId","LocalVariableInfo","LocalVariableName","Move","PatternMatch","Place","PlaceSegment","Return","Rvalue","Statement","StatementKind","StorageDead","StorageLive","SwitchConstant","SwitchDiscriminant","Terminator","TerminatorKind","arity","basic_blocks","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","entry_point","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","kind","kind","local","local_variable_names","name","ne","ne","ne","ne","new","new_basic_block","partial_cmp","partial_cmp","partial_cmp","partial_cmp","projection","range","range","range","range","range","return_type","statements","terminator","then","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_variables","field","field","field","variant","additional_argument_types","additional_arguments","argument","argument_type","arguments","aspect","curried_arguments","curry_steps","definitions","fields","func_object","function","name","name","name","return_type","return_type","source","target","target","target","target","target","target","target","target","ty","type_variables","type_variables","type_variables","type_variables","variable","variable","variable","variant","cases","cases","default","enum_name","enum_parameters","enum_place","place","value"],"q":["quill_mir","","","","","","","","","","","","","","","","","","","","","","","","","","","","quill_mir::mirquill_mir::mir::PlaceSegment","","","","quill_mir::mir::StatementKind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","quill_mir::mir::TerminatorKind","","","","","","",""],"d":["","","","","","","","The qualified name where the “main” function is.","","","","","","","","","","","Definitions for all of the MIR constructs.","Converts all expressions into control flow graphs.","","","","","","","","","","","","Applies one argument to a function, and stores the result …","An argument starts as being ‘owned’. Parts of …","","Moves an rvalue into a local variable.","A basic block is a block of code that can be executed, …","","Creates a borrow of a local variable. Borrowing more …","","Generates a new constant value.","Creates an object of a given type, and puts it in target.","Creates a function object which contains a function and …","Creates an impl of an aspect from a set of definitions. …","","This local variable is a borrow, and we will copy the …","If the local is a borrowed type, the result of this …","","A definition for a symbol, i.e. a function or constant. …","Calls the destructor for the object, if it has a …","Calls the destructor for the object, and deallocates the …","Regardless if the local is a borrowed type or owned type, …","If the local is a borrowed type, the result of this …","Deallocates the memory containing this variable. Similar …","Jump to another basic block unconditionally.","If the local is a borrowed type, the result of this …","Creates a local instance of a definition such as a …","Used in intermediate steps, when we do not know the …","Invokes a function with the given arguments. This is …","Invokes a function object with the arguments it contains, …","Local variables, such as intermediate values, are given a …","","Information about a local variable, either explicitly or …","A local variable is a value which can be operated on by …","We will move data out of this place, possibly dropping …","","A place in memory that we can read from and write to.","","Returns a local variable.","Represents the use of a value that we can feed into an …","","","Hints to LLVM that we will no longer use this variable. …","Hints to LLVM that this variable’s lifetime has now …","Works out which value a given local variable has.","Works out which variant of a enum type a given local …","","","How many parameters must be supplied to this function? …","Every basic block has a unique index, which is its index …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Which basic block should be entered to invoke the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The local variable that the place originates from.","Contains argument types as well as local variable types.","If this variable had a name, what was it?","","","","","","Inserts a new basic block into the control flow graph, …","","","","","A list of lenses that allow us to index inside this local …","","","Where was the local variable defined? If this is just an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","What is the exact type of this variable?","","","","","","","","","","","","","","","","","The type variables at the start of this definition.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If this type was an enum, which variant should we create?","Maps the names of enum discriminants to the basic block …","Maps the names of constant values to the basic block ID …","","What enum are we switching on?","What type parameters did this enum have?","Where is this enum stored?","Where is this value stored?",""],"i":[0,0,1,2,1,2,2,1,1,1,1,2,2,1,2,1,1,2,0,0,1,2,1,2,1,2,1,2,3,4,5,6,7,0,6,0,0,8,9,8,6,6,6,0,8,10,0,0,6,6,10,10,6,11,10,6,11,6,6,7,0,0,0,8,9,0,0,11,0,0,0,6,6,11,11,0,0,12,13,12,3,4,5,12,9,7,14,13,15,16,6,17,10,8,18,11,3,4,5,12,9,7,14,13,15,16,6,17,10,8,18,11,3,4,5,12,9,7,14,13,15,16,6,17,10,8,18,11,3,4,5,12,9,7,14,13,15,16,6,17,10,8,18,11,3,4,5,7,13,3,4,5,7,3,3,4,4,5,5,12,12,9,9,7,7,14,14,13,13,15,16,16,6,6,17,17,10,10,8,8,18,18,11,11,3,4,5,12,9,7,14,13,15,16,6,17,10,8,18,11,3,4,5,7,3,4,5,12,9,7,14,13,15,16,6,17,10,8,18,11,16,18,17,12,14,3,4,5,7,17,13,3,4,5,7,17,12,12,14,16,18,12,15,15,17,3,4,5,12,9,7,14,13,15,16,6,17,10,8,18,11,3,4,5,12,9,7,14,13,16,6,17,10,8,18,11,3,4,5,12,9,7,14,13,15,16,6,17,10,8,18,11,3,4,5,12,9,7,14,13,15,16,6,17,10,8,18,11,14,3,4,5,12,9,7,14,13,15,16,6,17,10,8,18,11,12,19,20,21,20,22,22,23,23,24,25,26,26,25,27,22,23,28,24,26,23,22,29,29,28,23,24,26,22,27,25,27,28,24,26,25,30,31,32,27,33,34,34,33,33,33,34,35],"f":[null,null,[[]],[[]],[[]],[[]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],null,[[["projectindex",6],["sourcefilehir",3],["sourcefileidentifier",3]],["sourcefilemir",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["argumentindex",3]],[[],["localvariableid",3]],[[],["basicblockid",3]],[[],["definitionm",3]],[[],["definitionbodym",4]],[[],["localvariablename",4]],[[],["localvariableinfo",3]],[[],["controlflowgraph",3]],[[],["basicblock",3]],[[],["statement",3]],[[],["statementkind",4]],[[],["place",3]],[[],["placesegment",4]],[[],["rvalue",4]],[[],["terminator",3]],[[],["terminatorkind",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["argumentindex",3]],["ordering",4]],[[["localvariableid",3]],["ordering",4]],[[["basicblockid",3]],["ordering",4]],[[["localvariablename",4]],["ordering",4]],null,[[["argumentindex",3]],["bool",15]],[[["localvariableid",3]],["bool",15]],[[["basicblockid",3]],["bool",15]],[[["localvariablename",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["argumentindex",3]],["bool",15]],[[["localvariableid",3]],["bool",15]],[[["basicblockid",3]],["bool",15]],[[["localvariablename",4]],["bool",15]],[[["localvariablename",4]]],[[["basicblock",3]],["basicblockid",3]],[[["argumentindex",3]],[["ordering",4],["option",4,["ordering"]]]],[[["localvariableid",3]],[["ordering",4],["option",4,["ordering"]]]],[[["basicblockid",3]],[["ordering",4],["option",4,["ordering"]]]],[[["localvariablename",4]],[["ordering",4],["option",4,["ordering"]]]],null,[[],["range",3]],null,null,null,null,null,null,null,[[["placesegment",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"ProjectMIR"],[3,"SourceFileMIR"],[3,"ArgumentIndex"],[3,"LocalVariableId"],[3,"BasicBlockId"],[4,"StatementKind"],[4,"LocalVariableName"],[4,"Rvalue"],[4,"DefinitionBodyM"],[4,"PlaceSegment"],[4,"TerminatorKind"],[3,"DefinitionM"],[3,"ControlFlowGraph"],[3,"LocalVariableInfo"],[3,"BasicBlock"],[3,"Statement"],[3,"Place"],[3,"Terminator"],[13,"DataField"],[13,"EnumField"],[13,"ImplField"],[13,"InvokeFunctionObject"],[13,"Apply"],[13,"InvokeFunction"],[13,"ConstructImpl"],[13,"ConstructFunctionObject"],[13,"ConstructData"],[13,"InstanceSymbol"],[13,"Assign"],[13,"DropIfAlive"],[13,"Drop"],[13,"Free"],[13,"SwitchDiscriminant"],[13,"SwitchConstant"],[13,"Return"]]},\
"quill_parser":{"doc":"","t":[0,0,0,0,0,5,0,0,3,3,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,12,12,12,12,12,13,4,3,3,3,3,13,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,13,13,4,13,3,13,4,13,13,13,13,13,13,13,13,13,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,12,11,11,11,11,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,13,13,13,13,4,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,4,11,11,11,11,11,11,11,11,11,11,11],"n":["data_types","definition","expr_pat","file","identifier","parse","types","visibility","AspectP","DataP","EnumP","EnumVariantP","FieldP","TypeConstructorP","alternatives","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","definitions","fields","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","identifier","identifier","identifier","into","into","into","into","into","into","name","name","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_ctor","type_ctor","type_id","type_id","type_id","type_id","type_id","type_id","type_params","type_params","type_params","vis","vis","vis","CompilerIntrinsic","DefinitionBodyP","DefinitionCaseP","DefinitionDeclP","DefinitionP","LifetimeP","PatternMatch","TypeBorrowP","TypeParameterP","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_token","clone","clone","clone","clone_into","clone_into","clone_into","decl","definition_type","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","lifetime","name","name","name","parameters","pattern","replacement","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_parameters","vis","Apply","Block","Bool","Borrow","ConstantValue","ConstructData","ConstructDataFields","Copy","ExprPatP","Immediate","Impl","ImplPattern","Int","Lambda","Let","Unit","Unknown","Variable","auto_fields","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","eq","fields","fmt","fmt","fmt","fmt","from","from","from","hash","into","into","into","ne","range","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","body","borrow_token","close_brace","close_brace","close_bracket","copy_token","data_constructor","expr","expr","expr","expr","fields","fields","impl_token","impl_token","lambda_token","let_token","name","open_brace","open_brace","open_bracket","params","range","statements","value","FileP","UseP","aspects","borrow","borrow","borrow_mut","borrow_mut","data","definitions","enums","fmt","fmt","from","from","into","into","source_file","try_from","try_from","try_into","try_into","type_id","type_id","uses","IdentifierP","NameP","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","fmt","fmt","fmt","fmt","from","from","hash","into","into","name","range","range","segments","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Borrow","Function","Impl","Named","TypeP","borrow","borrow_mut","fmt","from","into","range","try_from","try_into","type_id","aspect","borrow","identifier","impl_token","params","params","ty","Private","Public","Visibility","borrow","borrow_mut","clone","clone_into","fmt","from","into","to_owned","try_from","try_into","type_id"],"q":["quill_parser","","","","","","","","quill_parser::data_types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","quill_parser::definition","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","quill_parser::expr_pat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","quill_parser::expr_pat::ExprPatP","","","","","","","","","","","","","","","","","","","","","","","","","quill_parser::file","","","","","","","","","","","","","","","","","","","","","","","","quill_parser::identifier","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","quill_parser::types","","","","","","","","","","","","","","quill_parser::types::TypeP","","","","","","","quill_parser::visibility","","","","","","","","","","","","",""],"d":["","","","","","Parses a source file. This function parses the top-level …","","","An <code>aspect</code> definition.","A <code>data</code> block, used to define product types.","An <code>enum</code> block, used to define sum types. This kind of …","","","Represents a type constructor in a <code>data</code> block. For …","Has size 1 or larger.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The body of the function is not written in Quill, it is …","","Represents a case in a definition where we can replace …","","A <code>def</code> block. Defines a symbol’s type and what values it …","Either the definition or use of a lifetime parameter.","The body is defined as a series of cases to be pattern …","Represents the loan conditions of a borrowed value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A type variable may have one or more unnamed parameters, …","","","","","","","","","","","","","","","","","","","","","","","","","","","This definition might be defined with certain quantified …","","Apply the left hand side to the right hand side, e.g. <code>a b</code>.…","A block of statements, inside parentheses, separated by …","","Borrow some data for a duration less than its full …","","The name of a data type, followed by brace brackets …","","Copy some data behind a borrow.","Represents either an expression or a pattern.","A primitive constant such as <code>14</code> or <code>false</code>.","An implementation of an aspect. Only used in expressions, …","A pattern destructuring an implementation of an aspect. …","","A lambda abstraction, specifically <code>lambda params -> expr</code>.","A let statement, specifically <code>let identifier = left_expr;</code>.…","","An underscore <code>_</code> representing an unknown. This is valid …","A named variable e.g. <code>x</code> or <code>+</code>.","Fields that have not been assigned values (so will …","","","","","","","","","","Fields that have been assigned values, e.g. <code>foo = 1</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A single <code>.ql</code> file may export data types and definitions. …","","","","","","","","","","","","","","","","","","","","","","","","An unresolved identifier, which is a string of text at …","A name for an item, which cannot be qualified.","","","","","","","","","","","","","","","","","","","","","","Must contain at least one segment.","","","","","","","","","","","A borrowed type.","A function <code>a -> b</code>. Functions with more arguments, e.g. …","An implementation of an aspect for a list of types.","An explicitly named type possibly with type parameters, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,1,5,6,2,3,4,1,5,6,6,3,2,3,4,1,5,6,2,3,4,1,5,6,2,1,6,2,3,4,1,5,6,4,5,2,3,4,1,5,6,2,3,4,1,5,6,4,2,5,2,3,4,1,5,6,2,1,6,2,1,6,7,0,0,0,0,0,7,0,0,8,8,9,7,10,11,12,13,8,9,7,10,11,12,13,10,10,11,12,10,11,12,8,9,8,9,7,10,11,12,13,8,9,7,10,11,12,13,8,9,7,10,11,12,13,10,9,11,12,12,13,13,10,11,12,8,9,7,10,11,12,13,8,9,7,10,11,12,13,8,9,7,10,11,12,13,9,9,14,14,15,14,0,14,0,14,0,14,14,14,15,14,14,15,14,14,16,14,15,16,14,15,16,15,15,15,16,14,15,15,16,14,15,16,15,14,15,16,15,14,15,15,14,15,16,14,15,16,14,15,16,17,18,19,20,21,22,19,23,24,18,22,19,20,17,20,23,24,24,19,20,21,23,25,21,25,0,0,26,26,27,26,27,26,26,26,26,27,26,27,26,27,27,26,27,26,27,26,27,26,0,0,28,29,28,29,28,29,28,29,29,28,28,29,29,28,29,29,28,29,29,28,29,28,28,29,28,29,28,29,28,29,28,29,30,30,30,30,0,30,30,30,30,30,30,30,30,30,31,32,33,31,33,31,32,34,34,0,34,34,34,34,34,34,34,34,34,34,34],"f":[null,null,null,null,null,[[["vec",3,["tokentree"]],["sourcefileidentifier",3],["tokentree",4]],[["diagnosticresult",3,["filep"]],["filep",3]]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["typeborrowp",3]],[[],["lifetimep",3]],[[],["typeparameterp",3]],[[]],[[]],[[]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["constantvalue",4]],[[]],[[["constantvalue",4]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["constantvalue",4]],["bool",15]],[[],["range",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[],["identifierp",3]],[[],["namep",3]],[[]],[[]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],null,[[],["range",3]],null,null,[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["range",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["visibility",4]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"EnumP"],[3,"DataP"],[3,"TypeConstructorP"],[3,"FieldP"],[3,"EnumVariantP"],[3,"AspectP"],[4,"DefinitionBodyP"],[3,"DefinitionP"],[3,"DefinitionDeclP"],[3,"TypeBorrowP"],[3,"LifetimeP"],[3,"TypeParameterP"],[3,"DefinitionCaseP"],[4,"ExprPatP"],[4,"ConstantValue"],[3,"ConstructDataFields"],[13,"Impl"],[13,"Borrow"],[13,"ConstructData"],[13,"ImplPattern"],[13,"Block"],[13,"Copy"],[13,"Lambda"],[13,"Let"],[13,"Immediate"],[3,"FileP"],[3,"UseP"],[3,"IdentifierP"],[3,"NameP"],[4,"TypeP"],[13,"Impl"],[13,"Borrow"],[13,"Named"],[4,"Visibility"]]},\
"quill_source_file":{"doc":"","t":[3,13,3,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ErrorEmitter","Io","Module","PackageFileSystem","SourceFile","SourceFileLoadError","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","emit","file_path","find_all_source_files","fmt","fmt","fmt","from","from","from","from","from","get_contents","into","into","into","into","into","last_modified","new","new","overwrite_source_file","project_directories","remove_cache","source_files","submodules","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","with_source_file"],"q":["quill_source_file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Prints error and warning messages, outputting the …","","A tree of source files and other modules.","Represents the file structure of an entire package on …","A single file of source code.","If a source file’s contents could not be loaded, why …","","","","","","","","","","","","Emits the given message to the screen.","","","","","","","","","","","","","","","","","","TODO: Make only one project_directories map in <code>quill</code> and …","","Overwrites the truth of this source file with new …","Maps project names (e.g. <code>core</code>) to the path their sources …","Removes the cached entry of this source file from memory. …","","","","","","","","","","","","","","","","","","Gets a source file stored in memory, or reads it from …"],"i":[0,1,0,0,0,0,2,3,4,1,5,2,3,4,1,5,5,4,3,0,2,1,5,2,3,4,1,5,2,2,3,4,1,5,2,3,4,3,3,3,5,5,2,3,4,1,5,2,3,4,1,5,2,3,4,1,5,3],"f":[null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["module",3]],[[["errormessage",3]]],[[["sourcefileidentifier",3]],["pathbuf",3]],[[["moduleidentifier",3],["path",3]],[["sourcefileidentifier",3],["vec",3,["sourcefileidentifier"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[],["systemtime",3]],[[["pathbuf",3],["hashmap",3,["string","pathbuf"]],["string",3]]],[[["packagefilesystem",3]]],[[["sourcefileidentifier",3],["string",3]]],null,[[["sourcefileidentifier",3]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["sourcefileidentifier",3]]]],"p":[[4,"SourceFileLoadError"],[3,"SourceFile"],[3,"PackageFileSystem"],[3,"ErrorEmitter"],[3,"Module"]]},\
"quill_target":{"doc":"","t":[3,13,13,13,4,13,13,13,13,4,4,4,3,4,13,13,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11],"n":["BuildInfo","Debug","Gnu","Linux","OptimisationType","Pc","ReleaseFast","ReleaseSafe","ReleaseSmall","TargetArchitecture","TargetEnvironment","TargetOS","TargetTriple","TargetVendor","Unknown","Unknown","Wasi","Wasm32","Windows","X86_64","arch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_folder","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code_folder","default_triple","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","emit_asm","emit_basic_llvm_ir","emit_hir","emit_llvm_ir","emit_mir","emit_project_mir","emit_unverified_llvm_ir","env","executable","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","optimisation_type","os","serialize","serialize","serialize","serialize","serialize","serialize","serialize","target_triple","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_zig_target","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vendor","wasm32_wasi"],"q":["quill_target","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","On Unix, returns <code>x86_64-unknown-linux-gnu</code>.","","","","","","","","","","","","","","","","Gives the path of the executable generated by the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>wasm32-wasi</code> triple."],"i":[0,1,2,3,0,4,1,1,1,0,0,0,0,0,4,3,2,5,3,5,6,6,5,4,3,2,1,7,6,5,4,3,2,1,7,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,7,6,6,5,4,3,2,1,7,7,7,7,7,7,7,7,6,7,6,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,7,6,6,5,4,3,2,1,7,7,6,5,4,3,2,1,7,6,5,4,3,2,6,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,5,4,3,2,1,7,6,6],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["targettriple",3]],[[],["targetarchitecture",4]],[[],["targetvendor",4]],[[],["targetos",4]],[[],["targetenvironment",4]],[[],["optimisationtype",4]],[[],["buildinfo",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["targettriple",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,[[["str",15]],["pathbuf",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["str",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[],["targettriple",3]]],"p":[[4,"OptimisationType"],[4,"TargetEnvironment"],[4,"TargetOS"],[4,"TargetVendor"],[4,"TargetArchitecture"],[3,"TargetTriple"],[3,"BuildInfo"]]},\
"quill_type":{"doc":"","t":[13,13,3,13,13,13,3,13,13,4,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12],"n":["Bool","Borrow","BorrowCondition","Function","Impl","Int","Lifetime","Named","Primitive","PrimitiveType","Type","Unit","Variable","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_proper","from","from","from","from","hash","hash","hash","hash","into","into","into","into","lifetime","name","ne","ne","ne","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","borrow","name","name","parameters","parameters","parameters","ty","variable"],"q":["quill_type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","quill_type::Type","","","","","","",""],"d":["A 1-bit boolean type.","","Represents the loan conditions of a borrowed value.","A function <code>a -> b</code>. Functions with more arguments, e.g. …","An implementation of an aspect.","A 64-bit signed integer type.","","An explicitly named type possibly with type parameters, …","A primitive type, built in to the core of the type system.","The list of all core types, that are trivially supported …","","The unit type. This does not represent any particular …","A type variable, like <code>A</code>. Type variables may contain …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If <code>parenthesise</code> is true, the parameter should be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If we know the borrow condition, give it here.","","","","","","",""],"i":[1,2,0,2,2,1,0,2,2,0,0,1,2,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,2,3,3,4,4,1,1,2,2,3,4,1,2,3,4,1,2,3,4,1,3,4,2,3,4,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,5,6,7,6,8,7,5,8],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["type",4]],[[],["borrowcondition",3]],[[],["lifetime",3]],[[],["primitivetype",4]],[[]],[[]],[[]],[[]],[[["type",4]],["bool",15]],[[["borrowcondition",3]],["bool",15]],[[["lifetime",3]],["bool",15]],[[["primitivetype",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3],["bool",15]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["type",4]],["bool",15]],[[["borrowcondition",3]],["bool",15]],[[["lifetime",3]],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null],"p":[[4,"PrimitiveType"],[4,"Type"],[3,"BorrowCondition"],[3,"Lifetime"],[13,"Borrow"],[13,"Named"],[13,"Impl"],[13,"Variable"]]},\
"quill_type_deduce":{"doc":"","t":[3,11,11,11,11,12,11,11,0,11,12,12,5,11,11,11,0,11,12,3,11,11,0,12,0,11,11,11,11,0,11,11,11,11,13,3,4,3,13,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,12,3,13,13,13,13,13,3,13,13,13,3,3,6,4,6,3,13,13,13,13,13,13,13,13,13,4,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,3,3,3,12,11,11,11,11,11,11,5,12,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12],"n":["TypeConstructorInvocation","borrow","borrow_mut","clone","clone_into","data_type","fmt","from","hir","into","num_parameters","range","replace_type_variables","to_owned","try_from","try_into","type_check","type_id","variant","SourceFileHIR","borrow","borrow_mut","definition","definitions","expr","fmt","fmt","from","into","pattern","to_string","try_from","try_into","type_id","CompilerIntrinsic","Definition","DefinitionBody","DefinitionCase","PatternMatch","arg_patterns","arg_types","body","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","from","from","from","into","into","into","range","range","range","replacement","return_type","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_variables","AbstractionVariable","Apply","Argument","Block","Borrow","Borrow","BoundVariable","ConstantValue","ConstructData","Copy","DefinitionCaseGeneric","Expression","ExpressionContents","ExpressionContentsGeneric","ExpressionContentsT","ExpressionT","Function","Impl","Impl","Lambda","Let","Local","Named","Primitive","Symbol","TypeVariable","Unknown","Variable","arg_patterns","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","contents","contents","def_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","range","range","range","range","range","range","replacement","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_variable","var_type","var_type","borrow_token","close_brace","close_bracket","copy_token","data_type_name","expr","expr","expr","expr","fields","impl_token","implementations","lambda_token","let_token","name","name","open_brace","open_bracket","params","range","range","statements","type_variables","value","variant","id","name","name","parameters","parameters","parameters","ty","variable","Borrow","Constant","Function","Impl","Named","Pattern","TypeConstructor","Unknown","borrow","borrow_mut","clone","clone_into","fmt","fmt","from","into","range","to_owned","to_string","try_from","try_into","type_id","args","borrow_token","borrowed","fields","fields","impl_token","param_types","range","type_ctor","value","ForeignDeclaration","TypeVariablePrinter","VisibleNames","aspects","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check","decl","definitions","enum_variants","from","from","from","into","into","into","new","print","source_file","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","types"],"q":["quill_type_deduce","","","","","","","","","","","","","","","","","","","quill_type_deduce::hir","","","","","","","","","","","","","","","quill_type_deduce::hir::definition","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","quill_type_deduce::hir::expr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","quill_type_deduce::hir::expr::ExpressionContentsGeneric","","","","","","","","","","","","","","","","","","","","","","","","","quill_type_deduce::hir::expr::TypeVariable","","","","","","","","quill_type_deduce::hir::pattern","","","","","","","","","","","","","","","","","","","","","","quill_type_deduce::hir::pattern::Pattern","","","","","","","","","","quill_type_deduce::type_check","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["When a type constructor is used in code, e.g. <code>False</code>. For …","","","","","The data or enum type that the type constructor will …","","","","","How many type parameters does this data type have?","The range where the type ctor was used in code.","Replaces named type parameters e.g. <code>T</code> with their concrete …","","","","Performs type deduction and type checking of expressions …","","If this data type is an enum, which variant is created?","A parsed and fully type checked source file. No effort …","","","","","","","","","","","","","","","","A definition for a symbol, i.e. a function or constant. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type variables at the start of this definition.","A variable bound by some abstraction e.g. a lambda or a …","Apply the left hand side to the right hand side, e.g. <code>a b</code>.…","An argument to this function e.g. <code>x</code>.","A block of statements, inside parentheses, separated by …","A borrowed value.","Borrow conditions are checked later.","A variable bound by the definition of a function.","A raw value, such as a string literal, the <code>unit</code> keyword, …","Explicitly create a value of a data type.","A copy of a borrowed value.","Represents a case of a definition in an impl expression.","The Expression type is central to the HIR, or high-level …","","Represents the contents of an expression (which may or …","","","","An implementation of an aspect.","An explicitly named implementation of an aspect possibly …","A lambda abstraction, specifically <code>lambda params -> expr</code>.","A let statement, specifically <code>let identifier = expr;</code>.","A local variable declared by a <code>lambda</code> or <code>let</code> expression.","An explicitly named type possibly with type parameters, …","A primitive type, built in to the core of the type system.","A symbol in global scope e.g. <code>+</code> or <code>fold</code>.","Closely tied to the <code>Type</code> struct, this is used while type …","A completely unknown type - we don’t even have a type …","A known type variable, e.g. <code>T</code> or <code>F[A]</code>.","TODO: This should probably be changed to some other …","","","","","","","","","","","","","","","","","","","","","","","WHich definition are we defining a pattern replacement …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maps names of definitions to their implementations.","","","","The name that the symbol refers to.","","","","","The range where the symbol’s name was written in this …","","","The type variables we’re substituting into this symbol. …","","","","","","","","","","","A borrow of a pattern.","A constant value.","A function pattern. This cannot be used directly in code, …","An impl, e.g. <code>impl { print }</code>.","A name representing the entire pattern, e.g. <code>a</code>.","A pattern made up of type constructors and potential …","A type constructor, e.g. <code>False</code> or <code>Maybe { value = a }</code>.","An underscore representing an ignored pattern.","","","","","","","","","","","","","","","","","","The list of fields. If a pattern is provided, the pattern …","The list of fields. If a pattern is provided, the pattern …","","","","","","Represents a declaration that may be in a different …","A utility for printing type variables to screen. Works …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1,1,0,2,2,0,2,0,2,2,2,2,0,2,2,2,2,3,0,0,0,3,4,5,5,5,3,4,5,3,4,5,3,4,5,3,4,5,3,4,5,5,4,4,5,5,3,4,5,3,4,5,3,4,5,0,6,6,6,6,7,0,6,6,6,0,0,0,0,0,0,7,6,7,6,6,6,7,7,6,0,7,7,8,9,6,8,10,11,12,7,9,6,8,10,11,12,7,10,11,7,10,11,7,9,12,8,9,6,8,10,11,12,7,9,6,8,10,11,12,7,9,6,8,10,11,12,7,9,6,12,8,10,11,8,10,11,7,9,6,8,10,11,12,7,9,6,8,10,11,12,7,9,9,6,8,10,11,12,7,12,10,11,13,14,15,16,14,17,18,13,16,14,19,19,17,18,20,18,14,15,17,20,21,15,20,21,14,22,23,24,23,25,24,26,25,27,27,27,27,27,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,29,29,30,31,31,28,32,30,32,0,0,0,33,34,35,33,34,35,33,0,35,33,33,34,35,33,34,35,33,34,34,35,34,35,33,34,35,33,34,35,33,33],"f":[null,[[]],[[]],[[],["typeconstructorinvocation",3]],[[]],null,[[["formatter",3]],["result",6]],[[]],null,[[]],null,null,[[["type",4]],["type",4]],[[]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],null,null,[[]],[[]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["range",3]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["boundvariable",3]],[[],["abstractionvariable",3]],[[],["typevariable",4]],[[]],[[]],[[]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["range",3]],[[],["range",3]],[[],["range",3]],null,null,null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["pattern",4]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["range",3]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["sourcefileidentifier",3],["projectindex",6],["filep",3]],[["diagnosticresult",3,["sourcefilehir"]],["sourcefilehir",3]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["typevariableid",3],["typevariable",4],["hashmap",3,["typevariableid","typevariable"]]]],[[["typevariable",4]],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null],"p":[[3,"TypeConstructorInvocation"],[3,"SourceFileHIR"],[4,"DefinitionBody"],[3,"DefinitionCase"],[3,"Definition"],[4,"ExpressionContentsGeneric"],[4,"TypeVariable"],[3,"DefinitionCaseGeneric"],[3,"Expression"],[3,"BoundVariable"],[3,"AbstractionVariable"],[3,"ExpressionT"],[13,"Borrow"],[13,"ConstructData"],[13,"Block"],[13,"Copy"],[13,"Lambda"],[13,"Let"],[13,"Impl"],[13,"Symbol"],[13,"ConstantValue"],[13,"Unknown"],[13,"Named"],[13,"Impl"],[13,"Variable"],[13,"Borrow"],[4,"Pattern"],[13,"Function"],[13,"Borrow"],[13,"TypeConstructor"],[13,"Impl"],[13,"Constant"],[3,"VisibleNames"],[3,"TypeVariablePrinter"],[3,"ForeignDeclaration"]]},\
"quillc":{"doc":"","t":[5],"n":["invoke"],"q":["quillc"],"d":["Returns false if an error was emitted. Messages are …"],"i":[0],"f":[[[["quillcinvocation",3]],["bool",15]]],"p":[]},\
"quillc_api":{"doc":"","t":[3,3,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12],"n":["ProjectInfo","QuillcInvocation","borrow","borrow","borrow_mut","borrow_mut","build_info","deserialize","deserialize","fmt","from","from","into","into","name","serialize","serialize","try_from","try_from","try_into","try_into","type_id","type_id","zig_compiler"],"q":["quillc_api","","","","","","","","","","","","","","","","","","","","","","",""],"d":["This is the format for <code>quill.toml</code> files.","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,1,1,2,2,1,2,1,2,2,1,2,1,2,1,2,1,2,1],"f":[null,null,[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null],"p":[[3,"QuillcInvocation"],[3,"ProjectInfo"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};